<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linkFlow.manager.common.dao.ProductUserDao">

<resultMap id="BaseResultMap" type="ProductUserVO" >
<id column="pu_idx" property="puIdx" jdbcType="INTEGER" />
<result column="pu_pd_idx" property="puPdIdx" jdbcType="INTEGER" />
<result column="pu_tk_idx" property="puTkIdx" jdbcType="INTEGER" />
<result column="pu_mb_idx" property="puMbIdx" jdbcType="BIGINT" />
<result column="pu_state" property="puState" jdbcType="TINYINT" />
<result column="pu_create_date" property="puCreateDate" jdbcType="TIMESTAMP" />
<result column="pu_update_date" property="puUpdateDate" jdbcType="TIMESTAMP" />
<result column="pu_expire_date" property="puExpireDate" jdbcType="TIMESTAMP" />
<result column="pu_base_amount" property="puBaseAmount" jdbcType="DECIMAL" />
<result column="pu_interest_amount" property="puInterestAmount" jdbcType="DECIMAL" />
<result column="pu_return_amount" property="puReturnAmount" jdbcType="DECIMAL" />
<result column="pu_reward_tk_idx" property="puRewardTkIdx" jdbcType="INTEGER" />
<result column="pu_reward_rate" property="puRewardRate" jdbcType="VARCHAR" />
<result column="pu_reward_symbol" property="puRewardSymbol" jdbcType="VARCHAR" />
<result column="pu_join_day" property="puJoinDay" jdbcType="INTEGER" />

<association property="memberVO" javaType="MemberVO" column="mb_idx" autoMapping="true" />
<association property="productInfoVO" javaType="ProductInfoVO" column="pd_idx" autoMapping="true" />
<association property="tokenInfoVO" javaType="TokenInfoVO" column="tk_idx" autoMapping="true" />
</resultMap>

<resultMap id="ApiResultMap" type="ProductUserVOForApi" >
<id column="pu_idx" property="idx" jdbcType="INTEGER" />
<result column="pu_pd_idx" property="productId" jdbcType="INTEGER" />
<result column="pu_tk_idx" property="tokenId" jdbcType="INTEGER" />

<result column="pu_state" property="state" jdbcType="TINYINT" />
<result column="pu_create_date" property="createDate" jdbcType="TIMESTAMP" />

<result column="pu_expire_date" property="expireDate" jdbcType="TIMESTAMP" />
<result column="pu_base_amount" property="baseAmount" jdbcType="DECIMAL" />
<result column="pu_interest_amount" property="interestAmount" jdbcType="DECIMAL" />


<result column="pd_tk_symbol" property="symbol" jdbcType="VARCHAR" />
<result column="pd_type" property="type" jdbcType="VARCHAR" />
<result column="pd_name" property="name" jdbcType="VARCHAR" />
<result column="pd_detail" property="detail" jdbcType="LONGVARCHAR" />
<result column="pd_state" property="productState" jdbcType="TINYINT" />
<result column="pd_start_date" property="startDate" jdbcType="TIMESTAMP" />
<result column="pd_expire_date" property="expireDate" jdbcType="TIMESTAMP" />
<result column="pd_day" property="day" jdbcType="INTEGER" />
</resultMap>

<resultMap id="SumResultMap" type="ProductUserVOForSum" >
<result column="countItem" property="countItem" jdbcType="INTEGER" />
<result column="amount" property="amount" jdbcType="DECIMAL" />
</resultMap>

<sql id="Base_Column_List" >pu_idx, pu_tk_idx,pu_pd_idx, pu_mb_idx, pu_state, pu_create_date, pu_update_date, pu_expire_date,pu_base_amount, pu_interest_amount, pu_return_amount, pu_reward_tk_idx, pu_reward_rate,pu_reward_symbol, pu_join_day, pd.*, mb.*, tk.*</sql>
<sql id="Api_Column_List" >pu_idx, pu_tk_idx,pu_pd_idx, pu_mb_idx, pu_state, pu_create_date, pu_update_date, pu_expire_date,pu_base_amount, pu_interest_amount, pu_return_amount, pu_reward_tk_idx, pu_reward_rate,pu_reward_symbol, pu_join_day, pd.*, mb.*, tk.*</sql>
<sql id="JoinTableFrom" >FROM z_product_user pu LEFT OUTER JOIN z_product_info pd ON pu.pu_pd_idx = pd.pd_idx LEFT OUTER JOIN z_member mb ON pu.pu_mb_idx = mb.mb_idx LEFT OUTER JOIN z_token_info tk ON tk.tk_idx = pu.pu_tk_idx</sql>

<sql id="BaseSearchQuery">
<trim suffixOverrides="AND">
<if test="queryColumn != null and search != ''">
<if test="queryColumn == 'all'">
(mb.mb_id = #{search}
OR pd.pd_type = #{search}
OR pd.pd_tk_symbol = #{search}) AND
</if>
</if>
<if test="puIdx != null">pu_idx = #{puIdx} AND</if>
<if test="puMbIdx != null">pu_mb_idx = #{puMbIdx} AND</if>
<if test="puPdIdx != null">pu_pd_idx = #{puPdIdx} AND</if>
<if test="puTkIdx != null">pu_tk_idx = #{puTkIdx} AND</if>
<if test="puState != null">pu_state = #{puState} AND</if>
<if test="puCreateDateUnder != null">#{puCreateDateUnder} >= pu_create_date AND</if>
<if test="puCreateDateOver != null">pu_create_date >= #{puCreateDateOver} AND</if>
<if test="pdState != null">pd_state = #{pdState} AND</if>
<if test="pdType != null">pd_type = #{pdType} AND</if>
</trim>
</sql>

<select id="selectBySearchForApi" parameterType="hashmap" resultMap="ApiResultMap">SELECT <include refid="Api_Column_List"/> <include refid="JoinTableFrom"/> <where><include refid="BaseSearchQuery"/></where><if test="orderColumn != null">ORDER BY ${orderColumn} ${order}</if><if test="startRow != null and rowCount != null">LIMIT #{startRow}, #{rowCount}</if><if test="limit != null">LIMIT #{limit}</if></select>
<select id="selectBySearch" parameterType="hashmap" resultMap="BaseResultMap">SELECT <include refid="Base_Column_List"/> <include refid="JoinTableFrom"/> <where><include refid="BaseSearchQuery"/></where><if test="orderColumn != null">ORDER BY ${orderColumn} ${order}</if><if test="startRow != null and rowCount != null">LIMIT #{startRow}, #{rowCount}</if><if test="limit != null">LIMIT #{limit}</if></select>
<select id="selectByIndex" resultMap="BaseResultMap">SELECT <include refid="Base_Column_List"/> <include refid="JoinTableFrom"/> WHERE pu_idx = #{idx} </select>
<select id="selectAll" resultMap="BaseResultMap">SELECT <include refid="Base_Column_List"/> <include refid="JoinTableFrom"/> </select>
<select id="countBySearch" parameterType="hashmap" resultType="Integer">SELECT COUNT(*) <include refid="JoinTableFrom"/> <where><include refid="BaseSearchQuery"/></where></select>
<select id="countAll" resultType="Integer">SELECT COUNT(*) FROM z_product_user</select>

<insert id="insert" parameterType="ProductUserVO" >
insert into z_product_user
<trim prefix="(" suffix=")" suffixOverrides="," >
<if test="puIdx != null" >pu_idx,</if>
<if test="puPdIdx != null" >pu_pd_idx,</if>
<if test="puTkIdx != null" >pu_tk_idx,</if>
<if test="puMbIdx != null" >pu_mb_idx,</if>
<if test="puState != null" >pu_state,</if>
<if test="puCreateDate != null" >pu_create_date,</if>
<if test="puUpdateDate != null" >pu_update_date,</if>
<if test="puExpireDate != null" >pu_expire_date,</if>
<if test="puBaseAmount != null" >pu_base_amount,</if>
<if test="puInterestAmount != null" >pu_interest_amount,</if>
<if test="puReturnAmount != null" >pu_return_amount,</if>
<if test="puRewardTkIdx != null" >pu_reward_tk_idx,</if>
<if test="puRewardRate != null" >pu_reward_rate,</if>
<if test="puRewardSymbol != null" >pu_reward_symbol,</if>
<if test="puJoinDay != null" >pu_join_day,</if>
</trim>
<trim prefix="values (" suffix=")" suffixOverrides="," >
<if test="puIdx != null" >#{puIdx,jdbcType=INTEGER},</if>
<if test="puPdIdx != null" >#{puPdIdx,jdbcType=INTEGER},</if>
<if test="puTkIdx != null" >#{puTkIdx,jdbcType=INTEGER},</if>
<if test="puMbIdx != null" >#{puMbIdx,jdbcType=BIGINT},</if>
<if test="puState != null" >#{puState,jdbcType=TINYINT},</if>
<if test="puCreateDate != null" >#{puCreateDate,jdbcType=TIMESTAMP},</if>
<if test="puUpdateDate != null" >#{puUpdateDate,jdbcType=TIMESTAMP},</if>
<if test="puExpireDate != null" >#{puExpireDate,jdbcType=TIMESTAMP},</if>
<if test="puBaseAmount != null" >#{puBaseAmount,jdbcType=DECIMAL},</if>
<if test="puInterestAmount != null" >#{puInterestAmount,jdbcType=DECIMAL},</if>
<if test="puReturnAmount != null" >#{puReturnAmount,jdbcType=DECIMAL},</if>
<if test="puRewardTkIdx != null" >#{puRewardTkIdx,jdbcType=INTEGER},</if>
<if test="puRewardRate != null" >#{puRewardRate,jdbcType=VARCHAR},</if>
<if test="puRewardSymbol != null" >#{puRewardSymbol,jdbcType=VARCHAR},</if>
<if test="puJoinDay != null" >#{puJoinDay,jdbcType=INTEGER},</if>
</trim>
</insert>

<update id="update" parameterType="ProductUserVO" >
update z_product_user
<set >
<if test="puState != null" >pu_state = #{puState,jdbcType=TINYINT},</if>
<if test="puCreateDate != null" >pu_create_date = #{puCreateDate,jdbcType=TIMESTAMP},</if>
<if test="puUpdateDate != null" >pu_update_date = #{puUpdateDate,jdbcType=TIMESTAMP},</if>
<if test="puExpireDate != null" >pu_expire_date = #{puExpireDate,jdbcType=TIMESTAMP},</if>
<if test="puBaseAmount != null" >pu_base_amount = #{puBaseAmount,jdbcType=DECIMAL},</if>
<if test="puInterestAmount != null" >pu_interest_amount = #{puInterestAmount,jdbcType=DECIMAL},</if>
<if test="puReturnAmount != null" >pu_return_amount = #{puReturnAmount,jdbcType=DECIMAL},</if>
<if test="puRewardTkIdx != null" >pu_reward_tk_idx = #{puRewardTkIdx,jdbcType=INTEGER},</if>
<if test="puRewardRate != null" >pu_reward_rate = #{puRewardRate,jdbcType=VARCHAR},</if>
<if test="puRewardSymbol != null" >pu_reward_symbol = #{puRewardSymbol,jdbcType=VARCHAR},</if>
<if test="puJoinDay != null" >pu_join_day = #{puJoinDay,jdbcType=INTEGER},</if>
</set>
where pu_idx = #{puIdx,jdbcType=INTEGER}
</update>

<update id="appendBaseAmount" parameterType="hashmap">
update z_product_user
<set>
pu_update_date = SYSDATE(),
pu_base_amount = pu_base_amount + #{amount}
</set>
<where>
pu_idx = #{puIdx,jdbcType=INTEGER}
and #{amount} >= 0
</where>
</update>

<update id="appendInterestAmount" parameterType="hashmap">
update z_product_user
<set>
pu_update_date = SYSDATE(),
pu_interest_amount = pu_interest_amount + #{amount}
</set>
<where>
pu_idx = #{puIdx,jdbcType=INTEGER}
and #{amount} >= 0
</where>
</update>

<update id="startProduct" parameterType="hashmap">
update z_product_user
<set>
pu_update_date = SYSDATE(),
pu_state = #{puState}
</set>
<where>
pu_pd_idx = #{puPdIdx,jdbcType=INTEGER} and pu_idx > 0 and pu_state = 0
</where>
</update>

<select id="selectSumBySearch" parameterType="hashmap" resultMap="SumResultMap">
SELECT count(pu_idx) as countItem, sum(pu_base_amount) as amount
<include refid="JoinTableFrom"/>
<where>
<include refid="BaseSearchQuery"/>
</where>
<if test="groupByColumn != null">GROUP BY ${groupByColumn}</if>
<if test="orderColumn != null">ORDER BY ${orderColumn} ${order}</if>
<if test="startRow != null and rowCount != null">LIMIT #{startRow}, #{rowCount}</if>
<if test="limit != null">LIMIT #{limit}</if>
</select>

</mapper>